"""
Реализовать 
класс Matrix (матрица).
 Обеспечить 
 перегрузку конструктора класса (метод __init__()),
  который должен 
  принимать данные (список списков) 
  для формирования матрицы.

Подсказка: 
матрица — система некоторых математических величин,
 расположенных в виде прямоугольной схемы.

Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

 31 22
 37 43
 51 86

 3   5   32
 2   4   6
-1  64  -8

 3  5  8  3
 8  3  7  1

Следующий шаг — 
реализовать перегрузку метода __str__() 
для вывода матрицы в привычном виде.

Далее 
реализовать перегрузку метода __add__() 
для реализации операции сложения двух объектов класса Matrix (двух матриц). 
Результатом сложения должна быть новая матрица. 
Подсказка: 
сложение элементов матриц 
выполнять поэлементно — 
первый элемент первой строки первой матрицы складываем 
с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, lst):
        self.lst = lst
  
    def __repr__(self):
        return repr(self.lst)
  
    def __add__(self, other):
        lst = []
        for i in range(len(self.lst)):
            lst.append([])
            for k in range(len(self.lst[0])):
                lst[i].append(self.lst[i][k] + other.lst[i][k])
        return Matrix(lst)

mtx1 = Matrix([
    [1,2,3],
    [2,4,8],
    [16,32,64],
    [2,3,4]])

mtx2 = Matrix([
    [99,88,77],
    [55,10,10],
    [10,55,10],
    [10,10,55]])

mtx3 = Matrix([
    [-7, -5, -3],
    [2.5, 3, 5,7],
    [1, 0, 0],
    [0, 1, 0]])
    
print("-" * 60)
print(mtx3 + mtx3 + mtx2 + mtx1)
print("-" * 60)