"""
Реализовать 
класс Matrix (матрица).
 Обеспечить 
 перегрузку конструктора класса (метод __init__()),
  который должен 
  принимать данные (список списков) 
  для формирования матрицы.

Подсказка: 
матрица — система некоторых математических величин,
 расположенных в виде прямоугольной схемы.

Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

 31 22
 37 43
 51 86

 3   5   32
 2   4   6
-1  64  -8

 3  5  8  3
 8  3  7  1

Следующий шаг — 
реализовать перегрузку метода __str__() 
для вывода матрицы в привычном виде.

Далее 
реализовать перегрузку метода __add__() 
для реализации операции сложения двух объектов класса Matrix (двух матриц). 
Результатом сложения должна быть новая матрица. 
Подсказка: 
сложение элементов матриц 
выполнять поэлементно — 
первый элемент первой строки первой матрицы складываем 
с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:

    def __init__(self, list_1, list_2):
        self.list_1 = list_1
        self.list_2 = list_2

    def __add__(self):
        matrix = [
            [0, 0, 0],
            [0, 0, 0],
            [0, 0, 0],
        ]

        for i in range(len(self.list_1)):
            for k in range (len(self.list_2)):
                matrix[i][k] = self.list_1[i][k] + self.list_2[i][k]

        return str('\n'.join(['\t'.join([str(k) for k in i]) for i in matrix]))

    def __str__(self):
        return str('\n'.join(['\t'.join([str(k) for k in i]) for i in matrix]))


my_matrix = Matrix([
            [2, 3, 5],
            [2, -5, 2],
            [6, 1, 1],
        ],[
            [5, -7, 8],
            [2, 3, 9],
            [1, 1, -1],
        ]
)

print(my_matrix.__add__())